{
    "collab_server" : "",
    "contents" : "#' @title Gene selection using SPLS model\n#'\n#' @description Sparse Partial Least Square (SPLS) step for gene selection and dimension reduction.By applying SPLS to each pathway, we achieve the goal of gene selection and dimension reduction at the same time.\n#'\n#' @param object output list of prefilter step\n#' @param fold The number of folds to use to perform the cross-validation process.\n#' @param K the maximum number of hidden features in spls.\n#' @param etas Thresholding parameter. eta should be between 0 and 1.\n#' @param seed random seed that was set,  default = 123.\n#' @param method if auc is used, this is the maximum auc criteria, if partial likelihood(plik) is used, this is the min deviance criteria. Default = TRUE\n#' @param se1 one standard error criteria, default = TRUE\n#' @param par parallel option for running the code, default = FALSE\n#' @param foldid the number of folds to use to perform the cross-validation process.\n#'\n#' @import stats foreach plsRcox survival methods\n#' @export\n#' @docType methods\n#' @rdname selectGene-methods\n#' @aliases selectGene\n#' @aliases selectGene,Prefiltered-method\n#'\n#' @examples\n#' data(TCGA)\n#' geneRegroup.result=geneRegroup(plist=TCGA$pathList )\n#' prefilter.results=prefilter( data=TCGA$geneexpr, time=TCGA$t, status=TCGA$d,\n#'                              plist=geneRegroup.result@gset )\n#' gene.results=selectGene( object=prefilter.results, fold=5, K=5, etas=c(0.1,0.9),seed=123)\n\nsetMethod(\n  f=\"selectGene\",\n  signature=\"Prefiltered\",\n  definition=function( object, K=5, etas=seq(0.1,0.9,0.1),\n  fold=5, se1=TRUE, method=\"plik\", par=FALSE, foldid=NULL, seed=123 ) {\n\n    t<-object@inputdata$time\n    d<-object@inputdata$status\n    n<-length(t)\n    data<-object@xlist\n    pathways<-object@inputdata$pathway\n\n    dimx=unlist( lapply(data,function(x){ncol(as.matrix(x))}) )\n\n    if(is.null(foldid)){\n    \tset.seed(seed)\n\t\tfoldid = sample(rep(seq(1:fold), length=n))\n\t}\n\n    k.opt<-eta.opt<-NULL\n    score<-genes<-beta<-w<-list()\n\n    for(j in 1:length(pathways)){\n\n      xx<-as.matrix( data[[j]],nrow=n,ncol=dimx[j],drop=FALSE )\n      kmax<-min( K, ncol(xx) )\n\t  ##cross validation\n      if(par){\n\t    cvs=cv_splscox(x=xx, t=t, d=d, foldid=foldid,\n\t  \t\tK=kmax, eta.vec=etas, method=method, parallel=TRUE)\n  \t  }else{\n  \t  cvs=cv_splscox(x=xx, t=t, d=d, foldid=foldid,\n\t  \t\tK=kmax, eta.vec=etas, method=method, parallel=FALSE)\n  \t  }\n  \t  ###one se criteria\n  \t  if(se1==TRUE){\n  \t  \tk.opt[j]=cvs$opt.k[2]\n      \teta.opt[j]=cvs$opt.eta[2]\n      }\n      ##if auc is used, this is the maximum auc criteria\n      ##if partial likelihood is used, this is the min\n      ##deviance criteria\n  \t  if(se1==FALSE){\n  \t  \tk.opt[j]=cvs$opt.k[1]\n      \teta.opt[j]=cvs$opt.eta[1]\n      }\n      ###model fitting\n  \t  cox<-coxph(Surv(t,d)~1)\n      devres<-residuals(cox,type=\"deviance\")\n\n      spls.mod<-spls.cox(x=xx, y=devres, K=k.opt[j],\n      \t\teta=eta.opt[j],kappa=0.5, select=\"pls2\",\n      \t\tscale.x=T, scale.y=F)\n\n      fit=coxph(Surv(t,d)~spls.mod$plsmod$variates$X)\n\t  betahat=spls.mod$w%*%summary(fit)$coef[,1]\n\t  beta[[j]]<-data.frame( colnames(xx)[spls.mod$A],\n      \t\tbetahat )\n      rownames(beta[[j]])<-NULL\n      genes[[j]]<-beta[[j]][,1]\n\n\n    \tscore[[j]]<- data.frame(spls.mod$plsmod$variates$X)\n    \tw[[j]]<-spls.mod$w\n\n    }\n\n    names(genes)<-pathways\n    names(beta)<-pathways\n\n    methods::new( \"FitGene\",\n      score=score, geneSelected=genes,\n      fit = list( coef=beta, direction=w ),\n      dataPrefiltered=data,\n      inputdata = object@inputdata\n    )\n  }\n)\n",
    "created" : 1501822069866.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3622800569",
    "id" : "6F29E4F3",
    "lastKnownWriteTime" : 1501833552,
    "last_content_update" : 1501833552748,
    "path" : "E:/Dr.Chung/2/INGRID/R/selectGene.R",
    "project_path" : "R/selectGene.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}