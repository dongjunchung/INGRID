library(INGRID)
library(INGRID)
library(INGRID)
library(INGRID)
library(INGRID)
setwd("E:/Dr.Chung/2/INGRID")
library(INGRID)
library(INGRID)
library(INGRID)
library(INGRID)
library(INGRID)
data(TCGA)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
prefilter.results=prefilter( data=TCGA$geneexpr, time=TCGA$t, status=TCGA$d,
plist=geneRegroup.result )
geneRegroup.result
unique(unlist(sapply( geneRegroup.result, colnames )))
unique(unlist(sapply( geneRegroup.result, names )))
sapply( geneRegroup.result, names )
apply( geneRegroup.result, names )
lapply( geneRegroup.result, names )
names(TCGA$pathList)
path.index <- sprintf("pathway_%s",seq(1:4))
path.index
cbind(path.index,names(TCGA$pathList))
colnames(path.before)<-c("index","Pathway Name")
path.before <- cbind(path.index,names(TCGA$pathList))
colnames(path.before)<-c("index","Pathway Name")
path.before
names(TCGA$pathList)
a<-names(TCGA$pathList)
rownames(a)<-path.index
a<-as.data.frame(names(TCGA$pathList))
a
rownames(a)<-path.index
a
path.index <- sprintf("pathway_%s",seq(1:4))
path.before<-as.data.frame(names(TCGA$pathList))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
path.before
cat(path.before)
print(path.before)
geneRegroup.result
names(TCGA$pathList)
geneRegroup.result[geneRegroup.result]
names<- unlist(geneRegroup.result[1])
names
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
library(foreach)
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
plist<-TCGA$pathList
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
pmat
colSums(pmat)
TCGA$pathList
names(plist)
ifelse( names(plist)%in%names(geneRegroup.result), 0, 1 )
names(geneRegroup.result)
names(plist)%in%names(geneRegroup.result)
names(geneRegroup.result)%in%names(plist)
ifelse( names(geneRegroup.result)%in%names(plist), 1, 0 )
ifelse( names(geneRegroup.result)%in%names(plist), 0, 1 )
sum(ifelse( names(geneRegroup.result)%in%names(plist), 0, 1 ))
i<- sum(ifelse( names(geneRegroup.result)%in%names(plist), 0, 1 ))
idx <- which(ifelse( names(geneRegroup.result)%in%names(plist), 0, 1 )==1)
idx
idx[1]
idx[2]
i=2
names<- unlist(geneRegroup.result[idx[i]])
temp<- matrix(rep(0,idx*n.path.before,ncol=n.path.before))
n.path.before=4
temp<- matrix(rep(0,idx*n.path.before,ncol=n.path.before))
temp<- matrix(rep(0,idx*n.path.before),ncol=n.path.before))
temp<- matrix(rep(0,idx*n.path.before),ncol=n.path.before)
temp<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
n_newset<- sum(ifelse( names(geneRegroup.result)%in%names(plist), 0, 1 ))
temp<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
temp
for (j in 1:n_newset){
names<- unlist(geneRegroup.result[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
temp[j,]<-colSums(pmat)
}
temp
names(geneRegroup.result)[idx]
temp
rownames(temp)<-path.index
colnames(temp)<-names(geneRegroup.result)[idx]
temp
path.index
colnames(temp)<-path.index
rownames(temp)<-names(geneRegroup.result)[idx]
temp
library(INGRID)
data(TCGA)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
#' @param plist user provided gene lists organized in pathways
plist=TCGA$pathList
names<-unique(as.vector(unlist(plist)))
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
#dim(pmat)
rownames(pmat)=names
smat<-pmat[rowSums(pmat)>1,]
umat<-pmat[rowSums(pmat)==1,]
colnames(pmat)=colnames(smat)=colnames(umat)=names(plist)
paths<-apply(umat,1,function(x){which(x==1)})
mat<-cbind(lapply(plist,length),table(paths))
colnames(mat)<-c("total genes","unique genes")
d=as.dist(dist(smat, "binary"))
si=rep(0,10)
for(k in 2:10){
pam_k<-pam(d, k,diss=TRUE)
si[k]<-summary(silhouette(pam_k))$avg.width
}
pam.fit<-pam(d, 2, diss=TRUE)
plot(pam.fit)
gset1<-gset2<-list()
for(i in 1:length(pam.fit$medoids)){
idx<-as.vector(pam.fit$clustering)
gset1[[i]]<-names(pam.fit$clustering)[idx==i]
}
names(gset1)<-pam.fit$medoids
for(i in 1:length(names(plist))){
idx<-as.vector(paths)
gset2[[i]]<-names(paths)[idx==i]
}
names(gset2)<-names(plist)
gset<-c(gset1,gset2)
library(cluster)
names<-unique(as.vector(unlist(plist)))
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
#dim(pmat)
rownames(pmat)=names
smat<-pmat[rowSums(pmat)>1,]
umat<-pmat[rowSums(pmat)==1,]
colnames(pmat)=colnames(smat)=colnames(umat)=names(plist)
paths<-apply(umat,1,function(x){which(x==1)})
mat<-cbind(lapply(plist,length),table(paths))
colnames(mat)<-c("total genes","unique genes")
d=as.dist(dist(smat, "binary"))
si=rep(0,10)
for(k in 2:10){
pam_k<-pam(d, k,diss=TRUE)
si[k]<-summary(silhouette(pam_k))$avg.width
}
pam.fit<-pam(d, 2, diss=TRUE)
plot(pam.fit)
gset1<-gset2<-list()
for(i in 1:length(pam.fit$medoids)){
idx<-as.vector(pam.fit$clustering)
gset1[[i]]<-names(pam.fit$clustering)[idx==i]
}
names(gset1)<-pam.fit$medoids
for(i in 1:length(names(plist))){
idx<-as.vector(paths)
gset2[[i]]<-names(paths)[idx==i]
}
names(gset2)<-names(plist)
gset<-c(gset1,gset2)
geneset.after<-gset
path.index <- sprintf("pathway_%s",seq(1:4))
path.before<-as.data.frame(names(TCGA$pathList))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
print(path.before)
geneset.before <- names(TCGA$pathList)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
n_newset<- sum(ifelse( names(geneset.after)%in%names(plist), 0, 1 ))
idx <- which(ifelse( names(geneset.after)%in%names(plist), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
data(TCGA)
path.index <- sprintf("pathway_%s",seq(1:4))
path.before<-as.data.frame(names(TCGA$pathList))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
print(path.before)
geneset.before <- names(TCGA$pathList)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
n_newset<- sum(ifelse( names(geneset.after)%in%names(plist), 0, 1 ))
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result@gset
geneset.after<-geneRegroup.result@gset
n_newset<- sum(ifelse( names(geneset.after)%in%names(plist), 0, 1 ))
n_newset<- sum(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 ))
idx <- which(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%names(TCGA$pathList)[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%TCGA$pathList[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
path.index <- sprintf("pathway_%s",seq(1:4))
path.before<-as.data.frame(names(TCGA$pathList))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
print(path.before)
geneset.before <- names(TCGA$pathList)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
n_newset<- sum(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 ))
geneset.after<-geneRegroup.result@gset
plist=TCGA$pathList
names<-unique(as.vector(unlist(plist)))
pmat<-foreach(i=1:length(names(plist)), .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
#dim(pmat)
rownames(pmat)=names
smat<-pmat[rowSums(pmat)>1,]
umat<-pmat[rowSums(pmat)==1,]
colnames(pmat)=colnames(smat)=colnames(umat)=names(plist)
paths<-apply(umat,1,function(x){which(x==1)})
mat<-cbind(lapply(plist,length),table(paths))
colnames(mat)<-c("total genes","unique genes")
d=as.dist(dist(smat, "binary"))
si=rep(0,10)
for(k in 2:10){
pam_k<-pam(d, k,diss=TRUE)
si[k]<-summary(silhouette(pam_k))$avg.width
}
pam.fit<-pam(d, 2, diss=TRUE)
plot(pam.fit)
gset1<-gset2<-list()
for(i in 1:length(pam.fit$medoids)){
idx<-as.vector(pam.fit$clustering)
gset1[[i]]<-names(pam.fit$clustering)[idx==i]
}
names(gset1)<-pam.fit$medoids
for(i in 1:length(names(plist))){
idx<-as.vector(paths)
gset2[[i]]<-names(paths)[idx==i]
}
names(gset2)<-names(plist)
gset<-c(gset1,gset2)
geneset.after<-gset
n_newset<- sum(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 ))
idx <- which(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%TCGA$pathList[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneset.after<-geneRegroup.result@gset
library(foreach)
library(cluster)
path.index <- sprintf("pathway_%s",seq(1:4))
path.before<-as.data.frame(names(TCGA$pathList))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
print(path.before)
geneset.before <- names(TCGA$pathList)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
n_newset<- sum(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 ))
idx <- which(ifelse( names(geneset.after)%in%names(TCGA$pathList), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%TCGA$pathList[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
print(table)
prefilter.results=prefilter( data=TCGA$geneexpr, time=TCGA$t, status=TCGA$d,
plist=geneRegroup.result@gset )
plist
geneset.after
plist
plist<- TCGA$pathList
geneset.before <- names(plist)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
n_newset<- sum(ifelse( names(geneset.after)%in%names(plist), 0, 1 ))
idx <- which(ifelse( names(geneset.after)%in%names(plist), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%plist[[i]], 1, 0 )
}
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(geneset.after)[idx]
return(table)
table
library(INGRID)
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
?colSums
j=1
names<- unlist(geneset.after[idx[j]])
pmat<-foreach(i=1:n.path.before, .combine='cbind')%do%{
ifelse( names%in%TCGA$pathList[[i]], 1, 0 )
}
pmat
?lapply
lapply(1:n.path.before,function(i){ifelse( names%in%TCGA$pathList[[i]], 1, 0 )})
sapply(1:n.path.before,function(i){ifelse( names%in%TCGA$pathList[[i]], 1, 0 )})
?%in%
for (j in 1:n_newset){
names<- unlist(geneset.after[idx[j]])
pmat<-sapply(1:n.path.before,function(i){ifelse( names%in%TCGA$pathList[[i]], 1, 0 )})
table[j,]<-colSums(pmat)
}
table
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
plist<-TCGA$pathList
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
object<-geneRegroup.result
plist<-object@inputdata
plist
object@gset
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
geneRegroup.result@inputdata
object<-geneRegroup.result
plist<-object@inputdata
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
geneset.before <- names(plist)
n.path.before <- length(geneset.before)
path.index <- sprintf("pathway_%s",seq(1:n.path.before))
path.before<-as.data.frame(names(object@inputdata))
rownames(path.before)<-path.index
colnames(path.before)<-"Pathway Name"
n_newset<- sum(ifelse( names(object@gset)%in%names(plist), 0, 1 ))
idx <- which(ifelse( names(object@gset)%in%names(plist), 0, 1 )==1)
table<- matrix(rep(0,n_newset*n.path.before),ncol=n.path.before)
for (j in 1:n_newset){
names<- unlist(object@gset[idx[j]])
pmat<-sapply(1:n.path.before,function(i){ifelse( names%in%plist[[i]], 1, 0 )})
table[j,]<-colSums(pmat)
}
colnames(table)<-path.index
rownames(table)<-names(object@gset)[idx]
print(path.before)
print(table)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
geneRegroup.result=geneRegroup(plist=TCGA$pathList )
geneRegroup.result
library(INGRID)
library(INGRID)
library(INGRID)
